{"version":3,"file":"static/js/385.1e488415.chunk.js","mappings":"0NACA,EAAsB,2BAAtB,EAA8F,2BAA9F,EAAgI,4BAAhI,EAAyK,kCAAzK,EAAoN,8BAApN,EAA0P,6BAA1P,EAAgS,8BAAhS,EAA2U,kCAA3U,EAA0X,kC,SCyG1X,EA/FqB,WAAO,IAAD,EACzB,GAA0BA,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAkBC,EAAAA,EAAAA,MAClBC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,UAACL,EAAgBM,aAAjB,QAA0B,YAG5DC,EAAAA,EAAAA,YAAU,WACHT,GAILU,MAAM,sCAAD,OACmCV,EADnC,6DAGFW,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,IACRF,MAAK,SAAAG,GAAI,OAAIjB,EAASiB,EAAb,IACTC,OAAM,SAAAjB,GACLC,EAASD,EACV,GACJ,GAAE,CAACE,IAIJ,OACE,6BACE,mBACEgB,GAAIV,EAAoBW,QACxBC,QANc,kBAAMd,EAASE,EAAoBW,QAAnC,EAOdE,UAAWC,EAHb,kBAOCtB,IAAS,wBAAKA,EAAMuB,UACpBzB,IACC,4BACE,iBAAKuB,UAAWC,EAAhB,WACE,0BACE,gBACED,UAAWC,EACXE,IACE1B,EAAM2B,YApCL,kCAoC8B3B,EAAM2B,YAAc3B,EAAM4B,MAE3DC,IAAK7B,EAAM8B,WAGf,0BACE,2BACE,eAAIP,UAAWC,EAAf,UACE,wBAAKxB,EAAM8B,WAEb,gBAAIP,UAAWC,EAAf,WACE,sCACA,uBAAIxB,EAAM+B,eAEZ,gBAAIR,UAAWC,EAAf,WACE,oCACA,eAAID,UAAWC,EAAf,SACGxB,EAAMgC,OAAOC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChB,eAAeX,UAAWC,EAA1B,SACGU,GADMA,EADO,UAOtB,gBAAIX,UAAWC,EAAf,WACE,0CACA,uBAAIxB,EAAMmC,2BAKlB,eAAIZ,UAAWC,EAAf,qCACA,gBAAID,UAAWC,EAAf,WACE,yBACE,SAAC,KAAD,CAAMJ,GAAG,OAAOG,UAAWC,EAA3B,qBAIF,yBACE,SAAC,KAAD,CAAMJ,GAAG,UAAUG,UAAWC,EAA9B,2BAKJ,SAAC,EAAAY,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,WAMX,C","sources":["webpack://react-homework-template/./src/pages/ModuleDetails.module.css?3793","pages/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Btn\":\"ModuleDetails_Btn__VfX5P\",\"Detals\":\"ModuleDetails_Detals__jbS7t\",\"Img\":\"ModuleDetails_Img__80j+5\",\"Info\":\"ModuleDetails_Info__fjB6g\",\"DetalsItem\":\"ModuleDetails_DetalsItem__l4Wys\",\"Genres\":\"ModuleDetails_Genres__8xi9N\",\"Films\":\"ModuleDetails_Films__0+31u\",\"Inform\":\"ModuleDetails_Inform__Z1G3-\",\"InformList\":\"ModuleDetails_InformList__2Z7DH\",\"InformItem\":\"ModuleDetails_InformItem__Wq2Eu\"};","import { useEffect, useRef, useState } from 'react';\nimport {\n  Outlet,\n  useNavigate,\n  Link,\n  useParams,\n  useLocation,\n} from 'react-router-dom';\nimport { Suspense } from 'react';\nimport css from './ModuleDetails.module.css';\n\nconst MovieDetails = () => {\n  const [films, setFilms] = useState(null);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const locationDetails = useLocation();\n  const navigate = useNavigate();\n  const backLinkLocationRef = useRef(locationDetails.state ?? '/movies');\n  const BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=487f22e4948534aa04d1bc1da1e0a7b4&language=en-US`\n    )\n      .then(res => res.json())\n      .then(film => setFilms(film))\n      .catch(error => {\n        setError(error);\n      });\n  }, [movieId]);\n\n  const hendleClick = () => navigate(backLinkLocationRef.current);\n\n  return (\n    <main>\n      <button\n        to={backLinkLocationRef.current}\n        onClick={hendleClick}\n        className={css.Btn}\n      >\n        Back\n      </button>\n      {error && <h1>{error.message}</h1>}\n      {films && (\n        <div>\n          <div className={css.Info}>\n            <div>\n              <img\n                className={css.Img}\n                src={\n                  films.poster_path ? BASE_URL + films.poster_path : films.image\n                }\n                alt={films.title}\n              />\n            </div>\n            <div>\n              <ul>\n                <li className={css.DetalsItem}>\n                  <h1>{films.title}</h1>\n                </li>\n                <li className={css.DetalsItem}>\n                  <h2>Overview</h2>\n                  <p>{films.overview}</p>\n                </li>\n                <li className={css.DetalsItem}>\n                  <h2>Genres</h2>\n                  <ul className={css.Genres}>\n                    {films.genres.map(({ name }) => (\n                      <li key={name} className={css.Films}>\n                        {name}\n                      </li>\n                    ))}\n                  </ul>\n                </li>\n                <li className={css.DetalsItem}>\n                  <h2>Release date</h2>\n                  <p>{films.release_date}</p>\n                </li>\n              </ul>\n            </div>\n          </div>\n          <h3 className={css.Inform}>Additional information</h3>\n          <ul className={css.InformList}>\n            <li>\n              <Link to=\"cast\" className={css.InformItem}>\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link to=\"reviews\" className={css.InformItem}>\n                Reviews\n              </Link>\n            </li>\n          </ul>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n    </main>\n  );\n};\nexport default MovieDetails;\n"],"names":["useState","films","setFilms","error","setError","movieId","useParams","locationDetails","useLocation","navigate","useNavigate","backLinkLocationRef","useRef","state","useEffect","fetch","then","res","json","film","catch","to","current","onClick","className","css","message","src","poster_path","image","alt","title","overview","genres","map","name","release_date","Suspense","fallback"],"sourceRoot":""}